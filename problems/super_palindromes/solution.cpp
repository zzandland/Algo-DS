class Solution {
public:
    vector<uint64_t> value {
    1, 4, 9, 121, 484, 676, 10201, 12321, 14641, 40804, 44944, 69696, 94249, 698896, 1002001, 1234321, 
    4008004, 5221225, 6948496, 100020001, 102030201, 104060401, 121242121, 123454321, 125686521, 400080004, 
    404090404, 522808225, 617323716, 942060249, 10000200001, 10221412201, 12102420121, 12345654321, 
    40000800004, 637832238736, 1000002000001, 1002003002001, 1004006004001, 1020304030201, 1022325232201, 
    1024348434201, 1086078706801, 1210024200121, 1212225222121, 1214428244121, 1230127210321, 1232346432321, 
    1234567654321, 1615108015161, 4000008000004, 4004009004004, 4051154511504, 5265533355625, 9420645460249, 
    100000020000001, 100220141022001, 102012040210201, 102234363432201, 121000242000121, 121242363242121, 
    123212464212321, 123456787654321, 123862676268321, 144678292876441, 165551171155561, 400000080000004, 
    900075181570009, 4099923883299904, 10000000200000001, 10002000300020001, 10004000600040001, 10020210401202001, 
    10022212521222001, 10024214841242001, 10201020402010201, 10203040504030201, 10205060806050201, 
    10221432623412201, 10223454745432201, 12100002420000121, 12102202520220121, 12104402820440121, 
    12120030703002121, 12122232623222121, 12124434743442121, 12321024642012321, 12323244744232321, 
    12341234943214321, 12343456865434321, 12345678987654321, 40000000800000004, 40004000900040004, 94206450305460249,
    };
    
    int superpalindromesInRange(string left, string right) {
        unsigned long long l = stoull(left), r = stoull(right);
        int res = 0;
        for (auto n : value) {
            double nn = sqrt(n);
            if ((long long)nn != nn || !isPalindrome((unsigned long long)nn)) continue;
            if (l <= n && n <= r) ++res;
        }
        return res;
    }
    
    bool isPalindrome(unsigned long long n) {
        string s = to_string(n);
        for (int l = 0, r = s.length() - 1; l < r; ++l, --r) {
            if (s[l] != s[r]) return false;
        }
        return true;
    }
};